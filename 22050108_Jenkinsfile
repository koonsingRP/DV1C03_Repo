 
pipeline {


 environment {
    dockerimagename = "koonsingrp/22050108_webimage"
    dockerImage = ""
  }


    agent {
        node {
            label 'master'
        }
    }
  
    stages {
        
     stage('Stage 1_22050108') {
          steps {
                echo "S1_22050108 : Environment Preparation Completed"
         	}
        } 
        
        
        stage('Stage 2_22050108') {
            steps {
                script {
                  dockerImage = docker.build dockerimagename + ":$BUILD_NUMBER"
                
                   }
  	  	sh "docker-compose up -d  "
		 

                 echo "S2_22050108 : Web Server Creation Completed"
            }
        }
        stage('Stage Parallel') {
                parallel {
                stage('Stage 3_22050108') {
                    steps {

                        echo "S3_22050108 : API Test Completed"
                    }
                }
                stage('Stage 4_22050108') {
                    steps {

                        echo "S4_22050108 : DAST Security Test Completed"
                    }
                }
               } 
        
        }
        stage('Stage 5_22050108') {
            input {
                message "Do you want to release the work?"
                ok "Yes"
            }
	    
	       
             environment {
               registryCredential = 'dockerhublogin'
             }
              steps {
                 echo "Yes Selected"
		 
		     script {
               docker.withRegistry( 'https://registry.hub.docker.com', registryCredential ) {
               dockerImage.push()
             
                }
		
		 echo "Work Released - 22050108"
            } 
		 
                }
        }
        stage('Stage 6_22050108') {
     
             
            steps {
         
	       sh "docker-compose down  "
		echo "Stage 6 - 22050108 - Stop docker container"
              
            }
        }
        
            stage('Stage 7_22050108') {
         	 steps {
		   script {
			
			kubeconfig(caCertificate: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwdGFXNXAKYTNWaVpVTkJNQjRYRFRJeE1UQXdPVEUyTVRVeE4xb1hEVE14TVRBd09ERTJNVFV4TjFvd0ZURVRNQkVHQTFVRQpBeE1LYldsdWFXdDFZbVZEUVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS1FvClV2SVo2Yy9KR2ZTS2paNmptdmxQQjF6ZzFVamxQVlFkRjR3cU9EZmdUNEVOMlFhaHc3bFVLbjZWa2dmREJjU2IKYXlGQ3cxUkRjTGo5TmNycnRvU1lZWDJrOHlWb29HZWo0a0dCdzZUUGIzWDhHSERnN1YxN2FDeGhNSDRzT3JVeAo0NHN5Y3V6czVWL0UyQi9rWGxFYW85bzZxOFZMc2dIVVcvdDBsQXRGMXlsUkRKOUtTSWJ1RDZrdllKQnh4cWFECk9JNTNJTWFUTXprRjlSMjBRN202M1JBcGpmRTU4L2JGU1FzYnRhQTBxd2xOWjgwWEo3T3hkNjFuakNKQ3NIU0YKRi92SHV1bkNCU0tkVk96Z0ZOdUp3S0VjY09VL3g3NEJRV2tCdHErQTBTaG9pT3pWZWc0ZUNRZk5JY0U2SWFKYQpSRTNqRjArQTFLdk1BdE9adHk4Q0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJTUGlURUtWNGdYbllLRmErT3RVTkp5eXd0bm5UQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFSeCtrcEpSdgp6Q01XTWJYMDQyVGgvWTFIbWpjSFRGdlljdnExOVkxQzkrRzNYUTV5aHpINXRUdXBmSkFsTFo1Z3loalZpZTJCCmlCVG9RVS9TeDlvN2J5SWlPR0U2V0MwUEkrY2JvWWZSU0Y1dXJaS0NTb3p0cisvUUc4L0ZmQU53R3RYYlRJY1AKc2EwVGtxNjB2SDUxbXZTcXdReHJhSlZsbERpZlVVQWJQeDY5bkpaWGNhYzlxOTNIVmNqSGw4NDhCWjVYamJadwpDcGpNN2VDRmJwRjVjT2NKaS9Obm1XTmNaZ2swc05TS204dHNOUjZ6OGpmZFJLQ1pwOVRpUFF1S2UvTHlIR1J2ClVweTg3OHR6ak1CNzhMWVBpSGdZV0wxT2dXOHMvcm10VXpwREQxajhIRWNpeWNJZFVnelBJZGpwTlIvSU90VkgKODJWcTBiTkJvajIwaUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==', credentialsId: 'k8new', serverUrl: '')
			{
			 
			 
			 try
 			 {               
   				    sh "kubectl delete -n default deployment apache-deployment"
				    sh  "kubectl delete -n default service apache"
		                    sh "kubectl create -f deployment.yaml"
				    echo "Down previous deployment and continue with new deployment . . ."
                   	  }
                 	   catch (Exception e) {
			 		 sh "kubectl create -f deployment.yaml"	 
					 echo "No deployment has been done before , continue to deploy . . ."
		   	  }   
			 
			 
    			
			 
			 
			 
			 
			 
			}
		}	
        		  echo "Stage 7 - 22050108 Creating deployment to kubernetes"
      	 	}  
       	}

    }   
    post {
    	always {
	
		script {
		
              		sh "docker-compose down  "
			 	
                }
	}
    }
}
